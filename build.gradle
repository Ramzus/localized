buildscript {
    repositories {
        jcenter()
        maven {url "https://plugins.gradle.org/m2/"}
        maven {url "http://repo.spring.io/plugins-release"}
    }
    dependencies {
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
        classpath("net.saliman:gradle-properties-plugin:1.4.5")
        classpath("org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0")
    }
}

ext['project.version'] = '0.12-SNAPSHOT'
ext['hibernate.version'] = '5.2.2.Final'
ext['slf4j.version'] = '1.7.21'
ext['spring.version'] = '4.3.2.RELEASE'
ext['lombok.version'] = '1.16.10'
ext['junit.version'] = '4.12'
ext['assertj.version'] = '2.5.0'
ext['slf4j.test.version'] = '1.1.0'
ext['h2.version'] = '1.4.192'

group "io.github.deathman.localized"
version "${property('project.version')}"
description 'Localized is an i18n extension for Hibernate. The @Localized\n' +
            '\t\tannotation provides transparent i18n support on\n' +
            '\t\t@Entity properties.'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'net.saliman.properties'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext {
    isReleaseVersion = !project.version.endsWith("-SNAPSHOT")

    artifactoryRepo = isReleaseVersion ? 'libs-release-local' : 'libs-snapshot-local'
    artifactoryUrl = "${System.env['CI_ARTIFACTORY_URL'] ?: property('artifactory.url')}"
    artifactoryUser = "${System.env['CI_ARTIFACTORY_USER'] ?: property('artifactory.user')}"
    artifactoryPassword = "${System.env['CI_ARTIFACTORY_PASSWORD'] ?: property('artifactory.password')}"
}

repositories {
    jcenter()
}

dependencies {
    compile("org.slf4j:slf4j-api:${property('slf4j.version')}")
    provided("org.hibernate:hibernate-core:${property('hibernate.version')}")
    provided("org.projectlombok:lombok:${property('lombok.version')}")
    provided("org.springframework:spring-context:${property('spring.version')}")
    testCompile("junit:junit:${property('junit.version')}")
    testCompile("org.assertj:assertj-core:${property('assertj.version')}")
    testCompile("uk.org.lidalia:slf4j-test:${property('slf4j.test.version')}")
    testRuntime("com.h2database:h2:${property('h2.version')}")
}

test {
    testLogging.showStandardStreams = true

    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
}

task sourcesJar (type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "${project.group}"
            artifactId "${project.name}"
            version "${project.version}"

            from components.java
            artifact sourcesJar
        }
    }
}

artifactory {
    contextUrl = "http://${artifactoryUrl}/artifactory/"
    publish {
        repository {
            repoKey = "${artifactoryRepo}"
            username = "${artifactoryUser}"
            password = "${artifactoryPassword}"
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }
    }
}

artifactoryPublish.dependsOn publish

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}